namespace ResultCodes {
	// Returns the string representation of an sqlite3 result code.
	v8::Local<v8::String> Get(v8::Isolate* isolate, int code) {
		return v8::Local<v8::String>::New(isolate, _codes[code]);
	}
	
	std::unordered_map<int, ConstantString> _codes;
	void _AddCode(v8::Isolate* isolate, int code, const char* str) {
		_codes.emplace(std::piecewise_construct, std::forward_as_tuple(code), std::forward_as_tuple(isolate, CS::_InternalizedFromLatin1(isolate, str)));
	}
	
	void _Init(v8::Isolate* isolate) {
		_AddCode(isolate, SQLITE_OK, "SQLITE_OK");
		_AddCode(isolate, SQLITE_ERROR, "SQLITE_ERROR");
		_AddCode(isolate, SQLITE_INTERNAL, "SQLITE_INTERNAL");
		_AddCode(isolate, SQLITE_PERM, "SQLITE_PERM");
		_AddCode(isolate, SQLITE_ABORT, "SQLITE_ABORT");
		_AddCode(isolate, SQLITE_BUSY, "SQLITE_BUSY");
		_AddCode(isolate, SQLITE_LOCKED, "SQLITE_LOCKED");
		_AddCode(isolate, SQLITE_NOMEM, "SQLITE_NOMEM");
		_AddCode(isolate, SQLITE_READONLY, "SQLITE_READONLY");
		_AddCode(isolate, SQLITE_INTERRUPT, "SQLITE_INTERRUPT");
		_AddCode(isolate, SQLITE_IOERR, "SQLITE_IOERR");
		_AddCode(isolate, SQLITE_CORRUPT, "SQLITE_CORRUPT");
		_AddCode(isolate, SQLITE_NOTFOUND, "SQLITE_NOTFOUND");
		_AddCode(isolate, SQLITE_FULL, "SQLITE_FULL");
		_AddCode(isolate, SQLITE_CANTOPEN, "SQLITE_CANTOPEN");
		_AddCode(isolate, SQLITE_PROTOCOL, "SQLITE_PROTOCOL");
		_AddCode(isolate, SQLITE_EMPTY, "SQLITE_EMPTY");
		_AddCode(isolate, SQLITE_SCHEMA, "SQLITE_SCHEMA");
		_AddCode(isolate, SQLITE_TOOBIG, "SQLITE_TOOBIG");
		_AddCode(isolate, SQLITE_CONSTRAINT, "SQLITE_CONSTRAINT");
		_AddCode(isolate, SQLITE_MISMATCH, "SQLITE_MISMATCH");
		_AddCode(isolate, SQLITE_MISUSE, "SQLITE_MISUSE");
		_AddCode(isolate, SQLITE_NOLFS, "SQLITE_NOLFS");
		_AddCode(isolate, SQLITE_AUTH, "SQLITE_AUTH");
		_AddCode(isolate, SQLITE_FORMAT, "SQLITE_FORMAT");
		_AddCode(isolate, SQLITE_RANGE, "SQLITE_RANGE");
		_AddCode(isolate, SQLITE_NOTADB, "SQLITE_NOTADB");
		_AddCode(isolate, SQLITE_NOTICE, "SQLITE_NOTICE");
		_AddCode(isolate, SQLITE_WARNING, "SQLITE_WARNING");
		_AddCode(isolate, SQLITE_ROW, "SQLITE_ROW");
		_AddCode(isolate, SQLITE_DONE, "SQLITE_DONE");
		_AddCode(isolate, SQLITE_IOERR_READ, "SQLITE_IOERR_READ");
		_AddCode(isolate, SQLITE_IOERR_SHORT_READ, "SQLITE_IOERR_SHORT_READ");
		_AddCode(isolate, SQLITE_IOERR_WRITE, "SQLITE_IOERR_WRITE");
		_AddCode(isolate, SQLITE_IOERR_FSYNC, "SQLITE_IOERR_FSYNC");
		_AddCode(isolate, SQLITE_IOERR_DIR_FSYNC, "SQLITE_IOERR_DIR_FSYNC");
		_AddCode(isolate, SQLITE_IOERR_TRUNCATE, "SQLITE_IOERR_TRUNCATE");
		_AddCode(isolate, SQLITE_IOERR_FSTAT, "SQLITE_IOERR_FSTAT");
		_AddCode(isolate, SQLITE_IOERR_UNLOCK, "SQLITE_IOERR_UNLOCK");
		_AddCode(isolate, SQLITE_IOERR_RDLOCK, "SQLITE_IOERR_RDLOCK");
		_AddCode(isolate, SQLITE_IOERR_DELETE, "SQLITE_IOERR_DELETE");
		_AddCode(isolate, SQLITE_IOERR_BLOCKED, "SQLITE_IOERR_BLOCKED");
		_AddCode(isolate, SQLITE_IOERR_NOMEM, "SQLITE_IOERR_NOMEM");
		_AddCode(isolate, SQLITE_IOERR_ACCESS, "SQLITE_IOERR_ACCESS");
		_AddCode(isolate, SQLITE_IOERR_CHECKRESERVEDLOCK, "SQLITE_IOERR_CHECKRESERVEDLOCK");
		_AddCode(isolate, SQLITE_IOERR_LOCK, "SQLITE_IOERR_LOCK");
		_AddCode(isolate, SQLITE_IOERR_CLOSE, "SQLITE_IOERR_CLOSE");
		_AddCode(isolate, SQLITE_IOERR_DIR_CLOSE, "SQLITE_IOERR_DIR_CLOSE");
		_AddCode(isolate, SQLITE_IOERR_SHMOPEN, "SQLITE_IOERR_SHMOPEN");
		_AddCode(isolate, SQLITE_IOERR_SHMSIZE, "SQLITE_IOERR_SHMSIZE");
		_AddCode(isolate, SQLITE_IOERR_SHMLOCK, "SQLITE_IOERR_SHMLOCK");
		_AddCode(isolate, SQLITE_IOERR_SHMMAP, "SQLITE_IOERR_SHMMAP");
		_AddCode(isolate, SQLITE_IOERR_SEEK, "SQLITE_IOERR_SEEK");
		_AddCode(isolate, SQLITE_IOERR_DELETE_NOENT, "SQLITE_IOERR_DELETE_NOENT");
		_AddCode(isolate, SQLITE_IOERR_MMAP, "SQLITE_IOERR_MMAP");
		_AddCode(isolate, SQLITE_IOERR_GETTEMPPATH, "SQLITE_IOERR_GETTEMPPATH");
		_AddCode(isolate, SQLITE_IOERR_CONVPATH, "SQLITE_IOERR_CONVPATH");
		_AddCode(isolate, SQLITE_IOERR_VNODE, "SQLITE_IOERR_VNODE");
		_AddCode(isolate, SQLITE_IOERR_AUTH, "SQLITE_IOERR_AUTH");
		_AddCode(isolate, SQLITE_LOCKED_SHAREDCACHE, "SQLITE_LOCKED_SHAREDCACHE");
		_AddCode(isolate, SQLITE_BUSY_RECOVERY, "SQLITE_BUSY_RECOVERY");
		_AddCode(isolate, SQLITE_BUSY_SNAPSHOT, "SQLITE_BUSY_SNAPSHOT");
		_AddCode(isolate, SQLITE_CANTOPEN_NOTEMPDIR, "SQLITE_CANTOPEN_NOTEMPDIR");
		_AddCode(isolate, SQLITE_CANTOPEN_ISDIR, "SQLITE_CANTOPEN_ISDIR");
		_AddCode(isolate, SQLITE_CANTOPEN_FULLPATH, "SQLITE_CANTOPEN_FULLPATH");
		_AddCode(isolate, SQLITE_CANTOPEN_CONVPATH, "SQLITE_CANTOPEN_CONVPATH");
		_AddCode(isolate, SQLITE_CORRUPT_VTAB, "SQLITE_CORRUPT_VTAB");
		_AddCode(isolate, SQLITE_READONLY_RECOVERY, "SQLITE_READONLY_RECOVERY");
		_AddCode(isolate, SQLITE_READONLY_CANTLOCK, "SQLITE_READONLY_CANTLOCK");
		_AddCode(isolate, SQLITE_READONLY_ROLLBACK, "SQLITE_READONLY_ROLLBACK");
		_AddCode(isolate, SQLITE_READONLY_DBMOVED, "SQLITE_READONLY_DBMOVED");
		_AddCode(isolate, SQLITE_ABORT_ROLLBACK, "SQLITE_ABORT_ROLLBACK");
		_AddCode(isolate, SQLITE_CONSTRAINT_CHECK, "SQLITE_CONSTRAINT_CHECK");
		_AddCode(isolate, SQLITE_CONSTRAINT_COMMITHOOK, "SQLITE_CONSTRAINT_COMMITHOOK");
		_AddCode(isolate, SQLITE_CONSTRAINT_FOREIGNKEY, "SQLITE_CONSTRAINT_FOREIGNKEY");
		_AddCode(isolate, SQLITE_CONSTRAINT_FUNCTION, "SQLITE_CONSTRAINT_FUNCTION");
		_AddCode(isolate, SQLITE_CONSTRAINT_NOTNULL, "SQLITE_CONSTRAINT_NOTNULL");
		_AddCode(isolate, SQLITE_CONSTRAINT_PRIMARYKEY, "SQLITE_CONSTRAINT_PRIMARYKEY");
		_AddCode(isolate, SQLITE_CONSTRAINT_TRIGGER, "SQLITE_CONSTRAINT_TRIGGER");
		_AddCode(isolate, SQLITE_CONSTRAINT_UNIQUE, "SQLITE_CONSTRAINT_UNIQUE");
		_AddCode(isolate, SQLITE_CONSTRAINT_VTAB, "SQLITE_CONSTRAINT_VTAB");
		_AddCode(isolate, SQLITE_CONSTRAINT_ROWID, "SQLITE_CONSTRAINT_ROWID");
		_AddCode(isolate, SQLITE_NOTICE_RECOVER_WAL, "SQLITE_NOTICE_RECOVER_WAL");
		_AddCode(isolate, SQLITE_NOTICE_RECOVER_ROLLBACK, "SQLITE_NOTICE_RECOVER_ROLLBACK");
		_AddCode(isolate, SQLITE_WARNING_AUTOINDEX, "SQLITE_WARNING_AUTOINDEX");
		_AddCode(isolate, SQLITE_AUTH_USER, "SQLITE_AUTH_USER");
		_AddCode(isolate, SQLITE_OK_LOAD_PERMANENTLY, "SQLITE_OK_LOAD_PERMANENTLY");
	}
}
